CREATE TABLE user (
  id VARCHAR(36),
  username varchar(255) not null unique,
  password varchar(64) not null,
  email varchar(255),
  phone varchar(255),
  link varchar(255),
  gender varchar(255),
  registerDate varchar(255),
  primary key (id)
);

create table groupInfo (
    id varchar(36),
    name varchar(255) not null unique,
    type boolean,
    primary key(id)
);

create table member (
    userId varchar(36) not null,
    groupId varchar(36) not null,
    primary key (userId, groupId),
    FOREIGN KEY (userId) REFERENCES user(id),
    FOREIGN KEY (groupId) REFERENCES groupInfo(id)
);

create table admin (
    userId varchar(36) not null,
    groupId varchar(36) not null,
    primary key (userId, groupId),
    FOREIGN KEY (userId) REFERENCES user(id),
    FOREIGN KEY (groupId) REFERENCES groupInfo(id)
);

create table tag (
    id varchar(36),
    name varchar(255) not null unique,
    primary key (id)
);

create table tagRelation(
    groupId varchar(36),
    tagId varchar(36),
    primary key (groupId, tagId),
    FOREIGN KEY (tagId) REFERENCES tag(id),
    FOREIGN KEY (groupId) REFERENCES groupInfo(id)
);

create table post (
    id varchar(36),
    title varchar(255) not null,
    author varchar(36),
    groupId varchar(36),
    postContent text,
    attachment longblob,
    attachmentType enum('image', 'audio', 'video'),
    flagger varchar(36),
    datetime varchar(255),
    deleted boolean default false,
    primary key(id),
    foreign key (author) references user(id),
    foreign key (groupId) references groupInfo(id),
    foreign key (flagger) references user(id)
);

create table comment (
    id varchar(36),
    postId varchar(36),
    content text,
    author varchar(36),
    datetime varchar(255),
    primary key (id),
    deleted boolean default false,
    foreign key (postId) references post(id),
    foreign key (author) references user(id)
);

create table hide(
    postId varchar(36),
    userId varchar(36),
    primary key (postId, userId),
    foreign key (postId) references post(id),
    foreign key (userId) references user(id)
);

create table request (
    userId varchar(36) not null,
    groupId varchar(36) not null,
    primary key (userId, groupId),
    FOREIGN KEY (userId) REFERENCES user(id),
    FOREIGN KEY (groupId) REFERENCES groupInfo(id)
)

create table invitation (
    userId varchar(36) not null,
    groupId varchar(36) not null,
    primary key (userId, groupId),
    FOREIGN KEY (userId) REFERENCES user(id),
    FOREIGN KEY (groupId) REFERENCES groupInfo(id)
)

CREATE TABLE message (
    id varchar(36),
    sender varchar(36) not null,
    receiver varchar(36) not null,
    time varchar(255),
    content longblob,
    type enum('text', 'image', 'audio', 'video'),
    primary key (id),
    foreign key (sender) references user(id),
    foreign key (receiver) references user(id)
)